name: Health Check FastAPI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          docker compose version
          docker --version

      - name: Start services with docker compose
        run: |
          docker compose -f docker-compose.dev.yml up -d --build

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          until docker compose -f docker-compose.dev.yml exec postgres pg_isready -U admin; do
            sleep 2
          done
          echo "‚úÖ PostgreSQL is ready!"

      - name: Wait for API to be healthy
        run: |
          echo "Waiting for FastAPI to become healthy..."
          for i in {1..100}; do
            if docker compose -f docker-compose.dev.yml ps api | grep "Up" && \
               docker compose -f docker-compose.dev.yml exec api curl -f http://localhost:8000/v1/health/
              echo "‚úÖ API is responding"
              break
            fi
            echo "‚è≥ Waiting for API... ($i/100)"
            sleep 5
          done
          if [ $i -eq 100 ]; then
            echo "‚ùå API failed to start or respond within 150 seconds"
            docker compose -f docker-compose.dev.yml logs api
            exit 1
          fi

      - name: Validate Health Endpoint
        id: health_check
        run: |
          response=$(docker compose -f docker-compose.dev.yml exec api curl -s http://localhost:8000/v1/health/)
          echo "Response: $response"

          # Install jq inside the container if not present
          if ! docker compose -f docker-compose.dev.yml exec api which jq > /dev/null; then
            echo "üì¶ Installing jq inside API container..."
            docker compose -f docker-compose.dev.yml exec api apt-get update && docker compose -f docker-compose.dev.yml exec api apt-get install -y jq
          fi

          api_status=$(echo "$response" | jq -r '.api_status')
          db_status=$(echo "$response" | jq -r '.db_status')

          if [ "$api_status" != "health" ] || [ "$db_status" != "health" ]; then
            echo "‚ùå Health check failed!"
            echo "API Status: $api_status"
            echo "DB Status: $db_status"
            exit 1
          else
            echo "‚úÖ Health check PASSED!"
          fi

      - name: Show logs if needed (optional)
        if: failure()
        run: |
          echo "=== API Logs ==="
          docker compose -f docker-compose.dev.yml logs api
          echo "=== PostgreSQL Logs ==="
          docker compose -f docker-compose.dev.yml logs postgres

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose.dev.yml down --volumes --remove-orphans
